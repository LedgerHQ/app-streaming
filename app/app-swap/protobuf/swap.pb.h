/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_LEDGER_SWAP_APP_SWAP_PROTOBUF_SWAP_PB_H_INCLUDED
#define PB_LEDGER_SWAP_APP_SWAP_PROTOBUF_SWAP_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(16) ledger_swap_NewTransactionResponse_amount_to_provider_t;
typedef PB_BYTES_ARRAY_T(16) ledger_swap_NewTransactionResponse_amount_to_wallet_t;
typedef struct _ledger_swap_NewTransactionResponse { 
    char payin_address[57]; 
    char payin_extra_id[20]; 
    char refund_address[57]; 
    char refund_extra_id[20]; 
    char payout_address[57]; 
    char payout_extra_id[20]; 
    char currency_from[10]; 
    char currency_to[10]; 
    ledger_swap_NewTransactionResponse_amount_to_provider_t amount_to_provider; 
    ledger_swap_NewTransactionResponse_amount_to_wallet_t amount_to_wallet; 
    char device_transaction_id[11]; 
} ledger_swap_NewTransactionResponse;

typedef PB_BYTES_ARRAY_T(16) ledger_swap_UDecimal_coefficient_t;
/* (coefficient) * 10^(- exponent) */
typedef struct _ledger_swap_UDecimal { 
    ledger_swap_UDecimal_coefficient_t coefficient; 
    uint32_t exponent; 
} ledger_swap_UDecimal;

typedef PB_BYTES_ARRAY_T(16) ledger_swap_NewSellResponse_in_amount_t;
typedef PB_BYTES_ARRAY_T(32) ledger_swap_NewSellResponse_device_transaction_id_t;
typedef struct _ledger_swap_NewSellResponse { 
    char trader_email[50]; /* traderEmail */
    char in_currency[10]; /* inCurrency */
    ledger_swap_NewSellResponse_in_amount_t in_amount; /* inAmount */
    char in_address[50]; /* account */
    char out_currency[10]; /* outCurrency */
    bool has_out_amount;
    ledger_swap_UDecimal out_amount; /* outAmount */
    ledger_swap_NewSellResponse_device_transaction_id_t device_transaction_id; /* nonce */
} ledger_swap_NewSellResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ledger_swap_NewTransactionResponse_init_default {"", "", "", "", "", "", "", "", {0, {0}}, {0, {0}}, ""}
#define ledger_swap_UDecimal_init_default        {{0, {0}}, 0}
#define ledger_swap_NewSellResponse_init_default {"", "", {0, {0}}, "", "", false, ledger_swap_UDecimal_init_default, {0, {0}}}
#define ledger_swap_NewTransactionResponse_init_zero {"", "", "", "", "", "", "", "", {0, {0}}, {0, {0}}, ""}
#define ledger_swap_UDecimal_init_zero           {{0, {0}}, 0}
#define ledger_swap_NewSellResponse_init_zero    {"", "", {0, {0}}, "", "", false, ledger_swap_UDecimal_init_zero, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define ledger_swap_NewTransactionResponse_payin_address_tag 1
#define ledger_swap_NewTransactionResponse_payin_extra_id_tag 2
#define ledger_swap_NewTransactionResponse_refund_address_tag 3
#define ledger_swap_NewTransactionResponse_refund_extra_id_tag 4
#define ledger_swap_NewTransactionResponse_payout_address_tag 5
#define ledger_swap_NewTransactionResponse_payout_extra_id_tag 6
#define ledger_swap_NewTransactionResponse_currency_from_tag 7
#define ledger_swap_NewTransactionResponse_currency_to_tag 8
#define ledger_swap_NewTransactionResponse_amount_to_provider_tag 9
#define ledger_swap_NewTransactionResponse_amount_to_wallet_tag 10
#define ledger_swap_NewTransactionResponse_device_transaction_id_tag 11
#define ledger_swap_UDecimal_coefficient_tag     1
#define ledger_swap_UDecimal_exponent_tag        2
#define ledger_swap_NewSellResponse_trader_email_tag 1
#define ledger_swap_NewSellResponse_in_currency_tag 2
#define ledger_swap_NewSellResponse_in_amount_tag 3
#define ledger_swap_NewSellResponse_in_address_tag 4
#define ledger_swap_NewSellResponse_out_currency_tag 5
#define ledger_swap_NewSellResponse_out_amount_tag 6
#define ledger_swap_NewSellResponse_device_transaction_id_tag 7

/* Struct field encoding specification for nanopb */
#define ledger_swap_NewTransactionResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   payin_address,     1) \
X(a, STATIC,   SINGULAR, STRING,   payin_extra_id,    2) \
X(a, STATIC,   SINGULAR, STRING,   refund_address,    3) \
X(a, STATIC,   SINGULAR, STRING,   refund_extra_id,   4) \
X(a, STATIC,   SINGULAR, STRING,   payout_address,    5) \
X(a, STATIC,   SINGULAR, STRING,   payout_extra_id,   6) \
X(a, STATIC,   SINGULAR, STRING,   currency_from,     7) \
X(a, STATIC,   SINGULAR, STRING,   currency_to,       8) \
X(a, STATIC,   SINGULAR, BYTES,    amount_to_provider,   9) \
X(a, STATIC,   SINGULAR, BYTES,    amount_to_wallet,  10) \
X(a, STATIC,   SINGULAR, STRING,   device_transaction_id,  11)
#define ledger_swap_NewTransactionResponse_CALLBACK NULL
#define ledger_swap_NewTransactionResponse_DEFAULT NULL

#define ledger_swap_UDecimal_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BYTES,    coefficient,       1) \
X(a, STATIC,   SINGULAR, UINT32,   exponent,          2)
#define ledger_swap_UDecimal_CALLBACK NULL
#define ledger_swap_UDecimal_DEFAULT NULL

#define ledger_swap_NewSellResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   trader_email,      1) \
X(a, STATIC,   SINGULAR, STRING,   in_currency,       2) \
X(a, STATIC,   SINGULAR, BYTES,    in_amount,         3) \
X(a, STATIC,   SINGULAR, STRING,   in_address,        4) \
X(a, STATIC,   SINGULAR, STRING,   out_currency,      5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  out_amount,        6) \
X(a, STATIC,   SINGULAR, BYTES,    device_transaction_id,   7)
#define ledger_swap_NewSellResponse_CALLBACK NULL
#define ledger_swap_NewSellResponse_DEFAULT NULL
#define ledger_swap_NewSellResponse_out_amount_MSGTYPE ledger_swap_UDecimal

extern const pb_msgdesc_t ledger_swap_NewTransactionResponse_msg;
extern const pb_msgdesc_t ledger_swap_UDecimal_msg;
extern const pb_msgdesc_t ledger_swap_NewSellResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ledger_swap_NewTransactionResponse_fields &ledger_swap_NewTransactionResponse_msg
#define ledger_swap_UDecimal_fields &ledger_swap_UDecimal_msg
#define ledger_swap_NewSellResponse_fields &ledger_swap_NewSellResponse_msg

/* Maximum encoded size of messages (where known) */
#define ledger_swap_NewSellResponse_size         202
#define ledger_swap_NewTransactionResponse_size  307
#define ledger_swap_UDecimal_size                24

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
