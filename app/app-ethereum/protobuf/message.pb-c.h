/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _RequestGetVersion RequestGetVersion;
typedef struct _ResponseGetVersion ResponseGetVersion;
typedef struct _RequestGetPubKey RequestGetPubKey;
typedef struct _ResponseGetPubKey ResponseGetPubKey;
typedef struct _RequestSignTx RequestSignTx;
typedef struct _ResponseSignTx ResponseSignTx;
typedef struct _ResponseError ResponseError;
typedef struct _Request Request;
typedef struct _Response Response;


/* --- enums --- */


/* --- messages --- */

struct  _RequestGetVersion
{
  ProtobufCMessage base;
};
#define REQUEST_GET_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_get_version__descriptor) \
     }


struct  _ResponseGetVersion
{
  ProtobufCMessage base;
  char *version;
};
#define RESPONSE_GET_VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_get_version__descriptor) \
    , NULL }


struct  _RequestGetPubKey
{
  ProtobufCMessage base;
  size_t n_path;
  uint32_t *path;
  protobuf_c_boolean has_confirm;
  protobuf_c_boolean confirm;
  protobuf_c_boolean has_get_chain_code;
  protobuf_c_boolean get_chain_code;
};
#define REQUEST_GET_PUB_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_get_pub_key__descriptor) \
    , 0,NULL, 0,0, 0,0 }


struct  _ResponseGetPubKey
{
  ProtobufCMessage base;
  protobuf_c_boolean has_approved;
  protobuf_c_boolean approved;
  protobuf_c_boolean has_pubkey;
  ProtobufCBinaryData pubkey;
  protobuf_c_boolean has_address;
  ProtobufCBinaryData address;
  protobuf_c_boolean has_chain_code;
  ProtobufCBinaryData chain_code;
};
#define RESPONSE_GET_PUB_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_get_pub_key__descriptor) \
    , 0,0, 0,{0,NULL}, 0,{0,NULL}, 0,{0,NULL} }


struct  _RequestSignTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_tx;
  ProtobufCBinaryData tx;
};
#define REQUEST_SIGN_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request_sign_tx__descriptor) \
    , 0,{0,NULL} }


struct  _ResponseSignTx
{
  ProtobufCMessage base;
  protobuf_c_boolean has_approved;
  protobuf_c_boolean approved;
  protobuf_c_boolean has_signature;
  ProtobufCBinaryData signature;
};
#define RESPONSE_SIGN_TX__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_sign_tx__descriptor) \
    , 0,0, 0,{0,NULL} }


struct  _ResponseError
{
  ProtobufCMessage base;
  char *error_msg;
};
#define RESPONSE_ERROR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response_error__descriptor) \
    , NULL }


typedef enum {
  REQUEST__MESSAGE_ONEOF__NOT_SET = 0,
  REQUEST__MESSAGE_ONEOF_GET_VERSION = 1,
  REQUEST__MESSAGE_ONEOF_GET_PUBKEY = 2,
  REQUEST__MESSAGE_ONEOF_SIGN_TX = 3,
} Request__MessageOneofCase;

struct  _Request
{
  ProtobufCMessage base;
  Request__MessageOneofCase message_oneof_case;
  union {
    RequestGetVersion *get_version;
    RequestGetPubKey *get_pubkey;
    RequestSignTx *sign_tx;
  };
};
#define REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&request__descriptor) \
    , REQUEST__MESSAGE_ONEOF__NOT_SET, {0} }


typedef enum {
  RESPONSE__MESSAGE_ONEOF__NOT_SET = 0,
  RESPONSE__MESSAGE_ONEOF_GET_VERSION = 1,
  RESPONSE__MESSAGE_ONEOF_GET_PUBKEY = 2,
  RESPONSE__MESSAGE_ONEOF_SIGN_TX = 3,
  RESPONSE__MESSAGE_ONEOF_ERROR = 4,
} Response__MessageOneofCase;

struct  _Response
{
  ProtobufCMessage base;
  Response__MessageOneofCase message_oneof_case;
  union {
    ResponseGetVersion *get_version;
    ResponseGetPubKey *get_pubkey;
    ResponseSignTx *sign_tx;
    ResponseError *error;
  };
};
#define RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__descriptor) \
    , RESPONSE__MESSAGE_ONEOF__NOT_SET, {0} }


/* RequestGetVersion methods */
void   request_get_version__init
                     (RequestGetVersion         *message);
size_t request_get_version__get_packed_size
                     (const RequestGetVersion   *message);
size_t request_get_version__pack
                     (const RequestGetVersion   *message,
                      uint8_t             *out);
size_t request_get_version__pack_to_buffer
                     (const RequestGetVersion   *message,
                      ProtobufCBuffer     *buffer);
RequestGetVersion *
       request_get_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_get_version__free_unpacked
                     (RequestGetVersion *message,
                      ProtobufCAllocator *allocator);
/* ResponseGetVersion methods */
void   response_get_version__init
                     (ResponseGetVersion         *message);
size_t response_get_version__get_packed_size
                     (const ResponseGetVersion   *message);
size_t response_get_version__pack
                     (const ResponseGetVersion   *message,
                      uint8_t             *out);
size_t response_get_version__pack_to_buffer
                     (const ResponseGetVersion   *message,
                      ProtobufCBuffer     *buffer);
ResponseGetVersion *
       response_get_version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_get_version__free_unpacked
                     (ResponseGetVersion *message,
                      ProtobufCAllocator *allocator);
/* RequestGetPubKey methods */
void   request_get_pub_key__init
                     (RequestGetPubKey         *message);
size_t request_get_pub_key__get_packed_size
                     (const RequestGetPubKey   *message);
size_t request_get_pub_key__pack
                     (const RequestGetPubKey   *message,
                      uint8_t             *out);
size_t request_get_pub_key__pack_to_buffer
                     (const RequestGetPubKey   *message,
                      ProtobufCBuffer     *buffer);
RequestGetPubKey *
       request_get_pub_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_get_pub_key__free_unpacked
                     (RequestGetPubKey *message,
                      ProtobufCAllocator *allocator);
/* ResponseGetPubKey methods */
void   response_get_pub_key__init
                     (ResponseGetPubKey         *message);
size_t response_get_pub_key__get_packed_size
                     (const ResponseGetPubKey   *message);
size_t response_get_pub_key__pack
                     (const ResponseGetPubKey   *message,
                      uint8_t             *out);
size_t response_get_pub_key__pack_to_buffer
                     (const ResponseGetPubKey   *message,
                      ProtobufCBuffer     *buffer);
ResponseGetPubKey *
       response_get_pub_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_get_pub_key__free_unpacked
                     (ResponseGetPubKey *message,
                      ProtobufCAllocator *allocator);
/* RequestSignTx methods */
void   request_sign_tx__init
                     (RequestSignTx         *message);
size_t request_sign_tx__get_packed_size
                     (const RequestSignTx   *message);
size_t request_sign_tx__pack
                     (const RequestSignTx   *message,
                      uint8_t             *out);
size_t request_sign_tx__pack_to_buffer
                     (const RequestSignTx   *message,
                      ProtobufCBuffer     *buffer);
RequestSignTx *
       request_sign_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request_sign_tx__free_unpacked
                     (RequestSignTx *message,
                      ProtobufCAllocator *allocator);
/* ResponseSignTx methods */
void   response_sign_tx__init
                     (ResponseSignTx         *message);
size_t response_sign_tx__get_packed_size
                     (const ResponseSignTx   *message);
size_t response_sign_tx__pack
                     (const ResponseSignTx   *message,
                      uint8_t             *out);
size_t response_sign_tx__pack_to_buffer
                     (const ResponseSignTx   *message,
                      ProtobufCBuffer     *buffer);
ResponseSignTx *
       response_sign_tx__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_sign_tx__free_unpacked
                     (ResponseSignTx *message,
                      ProtobufCAllocator *allocator);
/* ResponseError methods */
void   response_error__init
                     (ResponseError         *message);
size_t response_error__get_packed_size
                     (const ResponseError   *message);
size_t response_error__pack
                     (const ResponseError   *message,
                      uint8_t             *out);
size_t response_error__pack_to_buffer
                     (const ResponseError   *message,
                      ProtobufCBuffer     *buffer);
ResponseError *
       response_error__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response_error__free_unpacked
                     (ResponseError *message,
                      ProtobufCAllocator *allocator);
/* Request methods */
void   request__init
                     (Request         *message);
size_t request__get_packed_size
                     (const Request   *message);
size_t request__pack
                     (const Request   *message,
                      uint8_t             *out);
size_t request__pack_to_buffer
                     (const Request   *message,
                      ProtobufCBuffer     *buffer);
Request *
       request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   request__free_unpacked
                     (Request *message,
                      ProtobufCAllocator *allocator);
/* Response methods */
void   response__init
                     (Response         *message);
size_t response__get_packed_size
                     (const Response   *message);
size_t response__pack
                     (const Response   *message,
                      uint8_t             *out);
size_t response__pack_to_buffer
                     (const Response   *message,
                      ProtobufCBuffer     *buffer);
Response *
       response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response__free_unpacked
                     (Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RequestGetVersion_Closure)
                 (const RequestGetVersion *message,
                  void *closure_data);
typedef void (*ResponseGetVersion_Closure)
                 (const ResponseGetVersion *message,
                  void *closure_data);
typedef void (*RequestGetPubKey_Closure)
                 (const RequestGetPubKey *message,
                  void *closure_data);
typedef void (*ResponseGetPubKey_Closure)
                 (const ResponseGetPubKey *message,
                  void *closure_data);
typedef void (*RequestSignTx_Closure)
                 (const RequestSignTx *message,
                  void *closure_data);
typedef void (*ResponseSignTx_Closure)
                 (const ResponseSignTx *message,
                  void *closure_data);
typedef void (*ResponseError_Closure)
                 (const ResponseError *message,
                  void *closure_data);
typedef void (*Request_Closure)
                 (const Request *message,
                  void *closure_data);
typedef void (*Response_Closure)
                 (const Response *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor request_get_version__descriptor;
extern const ProtobufCMessageDescriptor response_get_version__descriptor;
extern const ProtobufCMessageDescriptor request_get_pub_key__descriptor;
extern const ProtobufCMessageDescriptor response_get_pub_key__descriptor;
extern const ProtobufCMessageDescriptor request_sign_tx__descriptor;
extern const ProtobufCMessageDescriptor response_sign_tx__descriptor;
extern const ProtobufCMessageDescriptor response_error__descriptor;
extern const ProtobufCMessageDescriptor request__descriptor;
extern const ProtobufCMessageDescriptor response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
